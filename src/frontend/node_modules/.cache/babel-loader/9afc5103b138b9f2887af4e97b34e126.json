{"ast":null,"code":"import _defineProperty from \"/Users/Kevin/Desktop/JumboCode/Just-A-Start/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/JumboCode/Just-A-Start/client/src/pages/loginButton.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass LoginButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonStyle: {\n        backgroundColor: rgb(0, 51, 204),\n        height: '45px',\n        width: '130px',\n        position: 'relative',\n        borderRadius: '5px'\n      },\n      textStyle: {\n        fontFamily: 'Georgia',\n        color: 'white',\n        fontSize: '20px'\n      }\n    };\n\n    this.hoverColor = color => {\n      this.setState({\n        buttonStyle: _objectSpread({}, this.state.buttonStyle, {\n          backgroundColor: color\n        })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      style: this.state.buttonStyle,\n      onMouseOver: () => this.hoverColor('gray'),\n      onMouseLeave: () => this.hoverColor('blue'),\n      onClick: this.props.loginClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: this.state.textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" Log in \"));\n  }\n\n}\n\nexport default LoginButton;","map":{"version":3,"sources":["/Users/Kevin/Desktop/JumboCode/Just-A-Start/client/src/pages/loginButton.jsx"],"names":["React","Component","ReactDOM","LoginButton","state","buttonStyle","backgroundColor","rgb","height","width","position","borderRadius","textStyle","fontFamily","color","fontSize","hoverColor","setState","render","props","loginClick"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE;AAACC,QAAAA,eAAe,EAAEC,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,CAArB;AAAmCC,QAAAA,MAAM,EAAE,MAA3C;AAAmDC,QAAAA,KAAK,EAAE,OAA1D;AACCC,QAAAA,QAAQ,EAAE,UADX;AACuBC,QAAAA,YAAY,EAAE;AADrC,OADP;AAGNC,MAAAA,SAAS,EAAE;AAACC,QAAAA,UAAU,EAAE,SAAb;AAAwBC,QAAAA,KAAK,EAAE,OAA/B;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD;AAHL,KADwB;;AAAA,SAgBhCC,UAhBgC,GAgBlBF,KAAD,IAAW;AACtB,WAAKG,QAAL,CAAc;AAACZ,QAAAA,WAAW,oBAAM,KAAKD,KAAL,CAAWC,WAAjB;AAA8BC,UAAAA,eAAe,EAAEQ;AAA/C;AAAZ,OAAd;AACD,KAlB+B;AAAA;;AAMhCI,EAAAA,MAAM,GAAG;AACL,WACI;AAAQ,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,WAA1B;AAAuC,MAAA,WAAW,EACjD,MAAM,KAAKW,UAAL,CAAgB,MAAhB,CADP;AACgC,MAAA,YAAY,EAC3C,MAAM,KAAKA,UAAL,CAAgB,MAAhB,CAFP;AAEgC,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,UAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAM,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWQ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADJ;AAOH;;AAd+B;;AAyBpC,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass LoginButton extends Component {\n    state = {\n      buttonStyle: {backgroundColor: rgb(0, 51, 204), height: '45px', width: '130px',\n                    position: 'relative', borderRadius: '5px'},\n      textStyle: {fontFamily: 'Georgia', color: 'white', fontSize: '20px'}\n    };\n    render() {\n        return (\n            <button style={this.state.buttonStyle} onMouseOver=\n            {() => this.hoverColor('gray')} onMouseLeave=\n            {() => this.hoverColor('blue')} onClick={this.props.loginClick}>\n              <span style={this.state.textStyle}> Log in </span>\n            </button>\n        );\n    }\n\n    hoverColor = (color) => {\n      this.setState({buttonStyle: {...this.state.buttonStyle, backgroundColor: color}});\n    }\n\n\n\n\n}\n\nexport default LoginButton;\n"]},"metadata":{},"sourceType":"module"}